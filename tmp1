clang -fno-discard-value-names -emit-llvm  -o /home/faisal/code/eg_cpp/eg3_LlvmRev/SlacData/LLVM/eg3.cpp.bc -c /home/faisal/code/eg_cpp/eg3/eg3.cpp
Compilation to LLVM is finished

Get_Var(@.str)|vn: @.str
Get_Var(@.str)|lli: @.str = private unnamed_addr constant [5 x i8] c"p==q\00", align 1
Get_Var(@.str)|type: [5 x i8]*
Get_Var(@.str)|type: pointer array integer
Type: pointer array integer
A Pointer 
Type: array integer
Type: integer
Get_Var(@.str)|type: pointer array integer | <x*>,<[5]>,<1>
|Get_Var(@.str)|attr'': <g>,<[5]>,<1>
Get_Var(@.str)|var: GLOBAL___str
|(GLOBAL___str)

Get_Var(@.str.1)|vn: @.str.1
Get_Var(@.str.1)|lli: @.str.1 = private unnamed_addr constant [37 x i8] c"/home/faisal/code/eg_cpp/eg3/eg3.cpp\00", align 1
Get_Var(@.str.1)|type: [37 x i8]*
Get_Var(@.str.1)|type: pointer array integer
Type: pointer array integer
A Pointer 
Type: array integer
Type: integer
Get_Var(@.str.1)|type: pointer array integer | <x*>,<[37]>,<1>
|Get_Var(@.str.1)|attr'': <g>,<[37]>,<1>
Get_Var(@.str.1)|var: GLOBAL___str_1
|(GLOBAL___str_1)

Get_Var(@__PRETTY_FUNCTION__.main)|vn: @__PRETTY_FUNCTION__.main
Get_Var(@__PRETTY_FUNCTION__.main)|lli: @__PRETTY_FUNCTION__.main = private unnamed_addr constant [11 x i8] c"int main()\00", align 1
Get_Var(@__PRETTY_FUNCTION__.main)|type: [11 x i8]*
Get_Var(@__PRETTY_FUNCTION__.main)|type: pointer array integer
Type: pointer array integer
A Pointer 
Type: array integer
Type: integer
Get_Var(@__PRETTY_FUNCTION__.main)|type: pointer array integer | <x*>,<[11]>,<1>
|Get_Var(@__PRETTY_FUNCTION__.main)|attr'': <g>,<[11]>,<1>
Get_Var(@__PRETTY_FUNCTION__.main)|var: GLOBAL____PRETTY_FUNCTION___main
|(GLOBAL____PRETTY_FUNCTION___main)

Get_Var(@.str.2)|vn: @.str.2
Get_Var(@.str.2)|lli: @.str.2 = private unnamed_addr constant [6 x i8] c"q==10\00", align 1
Get_Var(@.str.2)|type: [6 x i8]*
Get_Var(@.str.2)|type: pointer array integer
Type: pointer array integer
A Pointer 
Type: array integer
Type: integer
Get_Var(@.str.2)|type: pointer array integer | <x*>,<[6]>,<1>
|Get_Var(@.str.2)|attr'': <g>,<[6]>,<1>
Get_Var(@.str.2)|var: GLOBAL___str_2
|(GLOBAL___str_2)

Get_Var(main)|vn: main
Get_Var(main)|lli: ; Function Attrs: mustprogress noinline norecurse optnone sspstrong uwtable
define dso_local i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %p = alloca i32, align 4
  %q = alloca i32, align 4
  %b = alloca %class.B*, align 8
  store i32 0, i32* %retval, align 4
  store i32 8, i32* %p, align 4
  %call = call noalias nonnull i8* @_Znwm(i64 8) #5
  %0 = bitcast i8* %call to %class.B*
  %1 = bitcast %class.B* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 8, i1 false)
  store %class.B* %0, %class.B** %b, align 8
  %2 = load %class.B*, %class.B** %b, align 8
  %3 = load i32, i32* %p, align 4
  call void @_ZN1B3setEi(%class.B* nonnull align 4 dereferenceable(8) %2, i32 %3)
  %4 = load %class.B*, %class.B** %b, align 8
  %call1 = call i32 @_ZN1B3getEv(%class.B* nonnull align 4 dereferenceable(8) %4)
  store i32 %call1, i32* %q, align 4
  %5 = load i32, i32* %p, align 4
  %6 = load i32, i32* %q, align 4
  %cmp = icmp eq i32 %5, %6
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #6
  unreachable

7:                                                ; No predecessors!
  br label %cond.end

cond.end:                                         ; preds = %7, %cond.true
  %8 = load %class.B*, %class.B** %b, align 8
  %y = getelementptr inbounds %class.B, %class.B* %8, i32 0, i32 1
  store i32 10, i32* %y, align 4
  %9 = load %class.B*, %class.B** %b, align 8
  %y2 = getelementptr inbounds %class.B, %class.B* %9, i32 0, i32 1
  %10 = load i32, i32* %y2, align 4
  store i32 %10, i32* %q, align 4
  %11 = load i32, i32* %q, align 4
  %cmp3 = icmp eq i32 %11, 10
  br i1 %cmp3, label %cond.true4, label %cond.false5

cond.true4:                                       ; preds = %cond.end
  br label %cond.end6

cond.false5:                                      ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 27, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #6
  unreachable

12:                                               ; No predecessors!
  br label %cond.end6

cond.end6:                                        ; preds = %12, %cond.true4
  ret i32 0
}

Get_Var(main)|type: i32 ()*
Get_Var(main)|type: pointer function
Type: pointer function
A Pointer 
Type: function
Type: integer
Get_Var(main)|type: pointer function | <x*>,(<4>|)
|Get_Var(main)|attr'': (<4>|)
Get_Var(main)|var: main

Get_Var(retval)|vn: retval
Get_Var(retval)|lli:   %retval = alloca i32, align 4
Get_Var(retval)|type: i32*
Get_Var(retval)|type: pointer integer
Type: pointer integer
A Pointer 
Type: integer
Get_Var(retval)|type: pointer integer | <x*>,<4>
|Get_Var(retval)|attr'': <4>
Get_Var(retval)|var: retval
|(retval)

Get_Var(p)|vn: p
Get_Var(p)|lli:   %p = alloca i32, align 4
Get_Var(p)|type: i32*
Get_Var(p)|type: pointer integer
Type: pointer integer
A Pointer 
Type: integer
Get_Var(p)|type: pointer integer | <x*>,<4>
|Get_Var(p)|attr'': <4>
Get_Var(p)|var: p
|(p)

Get_Var(q)|vn: q
Get_Var(q)|lli:   %q = alloca i32, align 4
Get_Var(q)|type: i32*
Get_Var(q)|type: pointer integer
Type: pointer integer
A Pointer 
Type: integer
Get_Var(q)|type: pointer integer | <x*>,<4>
|Get_Var(q)|attr'': <4>
Get_Var(q)|var: q
|(q)

Get_Var(b)|vn: b
Get_Var(b)|lli:   %b = alloca %class.B*, align 8
Get_Var(b)|type: %class.B**
Get_Var(b)|type: pointer pointer struct
Type: pointer pointer struct
A Pointer 
Type: pointer struct
A Pointer 
Type: struct
Get_Var(b)|type: pointer pointer struct | <x*>,<x*>,<{class_B}>
|Get_Var(b)|attr'': <x*>,<{class_B}>
Get_Var(b)|var: b
|(b)
Dest:  %retval = alloca i32, align 4

Get_Var(retval)|vn: retval
Get_Var(retval)|lli:   %retval = alloca i32, align 4
Get_Var(retval)|type: i32*
Type: pointer integer
A Pointer 
Type: integer
Get_Var(retval)|var: retval
Const source
Dest:  %p = alloca i32, align 4

Get_Var(p)|vn: p
Get_Var(p)|lli:   %p = alloca i32, align 4
Get_Var(p)|type: i32*
Type: pointer integer
A Pointer 
Type: integer
Get_Var(p)|var: p
Const source

Get_Var(_Znwm)|vn: _Znwm
Get_Var(_Znwm)|lli: ; Function Attrs: nobuiltin allocsize(0)
declare nonnull i8* @_Znwm(i64) #1

Get_Var(_Znwm)|type: i8* (i64)*
Get_Var(_Znwm)|type: pointer function
Type: pointer function
A Pointer 
Type: function
Type: pointer integer
A Pointer 
Type: integer
Get_Var(_Znwm)|type: pointer function | <x*>,(<x*><1>|)
|Get_Var(_Znwm)|attr'': (<x*><1>|)
Get_Var(_Znwm)|var: _Znwm

Get_Var(call)|vn: call
Get_Var(call)|lli:   %call = call noalias nonnull i8* @_Znwm(i64 8) #5
Get_Var(call)|type: i8*
Get_Var(call)|type: pointer integer
Type: pointer integer
A Pointer 
Type: integer
Get_Var(call)|type: pointer integer | <x*>,<1>
|Get_Var(call)|attr'': <1>
Get_Var(call)|var: call
|(call)

Get_Var(llvm.memset.p0i8.i64)|vn: llvm.memset.p0i8.i64
Get_Var(llvm.memset.p0i8.i64)|lli: ; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

Get_Var(llvm.memset.p0i8.i64)|type: void (i8*, i8, i64, i1)*
Get_Var(llvm.memset.p0i8.i64)|type: pointer function
Type: pointer function
A Pointer 
Type: function
Type: other type

Get_Var(llvm.memset.p0i8.i64)|type: pointer function | <x*>,(|)
|Get_Var(llvm.memset.p0i8.i64)|attr'': (|)
Get_Var(llvm.memset.p0i8.i64)|var: llvm_memset_p0i8_i64
Dest:  %b = alloca %class.B*, align 8

Get_Var(b)|vn: b
Get_Var(b)|lli:   %b = alloca %class.B*, align 8
Get_Var(b)|type: %class.B**
Type: pointer pointer struct
A Pointer 
Type: pointer struct
A Pointer 
Type: struct
Get_Var(b)|var: b
Pointer Src

Get_Var(call)|vn: call
Get_Var(call)|lli:   %call = call noalias nonnull i8* @_Znwm(i64 8) #5
Get_Var(call)|type: i8*
Get_Var(call)|type: pointer integer
Type: pointer integer
A Pointer 
Type: integer
Get_Var(call)|type: pointer integer | <x*>,<1>
|Get_Var(call)|attr'': <1>
Get_Var(call)|var: call

Get_Var(b)|vn: b
Get_Var(b)|lli:   %b = alloca %class.B*, align 8
Get_Var(b)|type: %class.B**
Type: pointer pointer struct
A Pointer 
Type: pointer struct
A Pointer 
Type: struct
Get_Var(b)|var: b

Get_Var(_ZN1B3setEi)|vn: _ZN1B3setEi
Get_Var(_ZN1B3setEi)|lli: ; Function Attrs: mustprogress noinline nounwind optnone sspstrong uwtable
define linkonce_odr dso_local void @_ZN1B3setEi(%class.B* nonnull align 4 dereferenceable(8) %this, i32 %y) #3 comdat align 2 {
entry:
  %this.addr = alloca %class.B*, align 8
  %y.addr = alloca i32, align 4
  store %class.B* %this, %class.B** %this.addr, align 8
  store i32 %y, i32* %y.addr, align 4
  %this1 = load %class.B*, %class.B** %this.addr, align 8
  %0 = load i32, i32* %y.addr, align 4
  %x = getelementptr inbounds %class.B, %class.B* %this1, i32 0, i32 0
  store i32 %0, i32* %x, align 4
  ret void
}

Get_Var(_ZN1B3setEi)|type: void (%class.B*, i32)*
Get_Var(_ZN1B3setEi)|type: pointer function
Type: pointer function
A Pointer 
Type: function
Type: other type

Get_Var(_ZN1B3setEi)|type: pointer function | <x*>,(|)
|Get_Var(_ZN1B3setEi)|attr'': (|)
Get_Var(_ZN1B3setEi)|var: _ZN1B3setEi

Get_Var(b)|vn: b
Get_Var(b)|lli:   %b = alloca %class.B*, align 8
Get_Var(b)|type: %class.B**
Type: pointer pointer struct
A Pointer 
Type: pointer struct
A Pointer 
Type: struct
Get_Var(b)|var: b

Get_Var(p)|vn: p
Get_Var(p)|lli:   %p = alloca i32, align 4
Get_Var(p)|type: i32*
Type: pointer integer
A Pointer 
Type: integer
Get_Var(p)|var: p

Get_Var(_ZN1B3getEv)|vn: _ZN1B3getEv
Get_Var(_ZN1B3getEv)|lli: ; Function Attrs: mustprogress noinline nounwind optnone sspstrong uwtable
define linkonce_odr dso_local i32 @_ZN1B3getEv(%class.B* nonnull align 4 dereferenceable(8) %this) #3 comdat align 2 {
entry:
  %this.addr = alloca %class.B*, align 8
  store %class.B* %this, %class.B** %this.addr, align 8
  %this1 = load %class.B*, %class.B** %this.addr, align 8
  %x = getelementptr inbounds %class.B, %class.B* %this1, i32 0, i32 0
  %0 = load i32, i32* %x, align 4
  ret i32 %0
}

Get_Var(_ZN1B3getEv)|type: i32 (%class.B*)*
Get_Var(_ZN1B3getEv)|type: pointer function
Type: pointer function
A Pointer 
Type: function
Type: integer
Get_Var(_ZN1B3getEv)|type: pointer function | <x*>,(<4>|)
|Get_Var(_ZN1B3getEv)|attr'': (<4>|)
Get_Var(_ZN1B3getEv)|var: _ZN1B3getEv

Get_Var(b)|vn: b
Get_Var(b)|lli:   %b = alloca %class.B*, align 8
Get_Var(b)|type: %class.B**
Type: pointer pointer struct
A Pointer 
Type: pointer struct
A Pointer 
Type: struct
Get_Var(b)|var: b

Get_Var(call1)|vn: call1
Get_Var(call1)|lli:   %call1 = call i32 @_ZN1B3getEv(%class.B* nonnull align 4 dereferenceable(8) %4)
Get_Var(call1)|type: i32
Get_Var(call1)|type: integer
Type: integer
Get_Var(call1)|type: integer | <4>
|Get_Var(call1)|attr'': <4>
Get_Var(call1)|var: call1
|(call1)
Dest:  %q = alloca i32, align 4

Get_Var(q)|vn: q
Get_Var(q)|lli:   %q = alloca i32, align 4
Get_Var(q)|type: i32*
Type: pointer integer
A Pointer 
Type: integer
Get_Var(q)|var: q

Get_Var(call1)|vn: call1
Get_Var(call1)|lli:   %call1 = call i32 @_ZN1B3getEv(%class.B* nonnull align 4 dereferenceable(8) %4)
Get_Var(call1)|type: i32
Get_Var(call1)|type: integer
Type: integer
Get_Var(call1)|type: integer | <4>
|Get_Var(call1)|attr'': <4>
Get_Var(call1)|var: call1

Get_Var(q)|vn: q
Get_Var(q)|lli:   %q = alloca i32, align 4
Get_Var(q)|type: i32*
Type: pointer integer
A Pointer 
Type: integer
Get_Var(q)|var: q

Get_Var(p)|vn: p
Get_Var(p)|lli:   %p = alloca i32, align 4
Get_Var(p)|type: i32*
Type: pointer integer
A Pointer 
Type: integer
Get_Var(p)|var: p

Get_Var(q)|vn: q
Get_Var(q)|lli:   %q = alloca i32, align 4
Get_Var(q)|type: i32*
Type: pointer integer
A Pointer 
Type: integer
Get_Var(q)|var: q

Get_Var(__assert_fail)|vn: __assert_fail
Get_Var(__assert_fail)|lli: ; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) #4

Get_Var(__assert_fail)|type: void (i8*, i8*, i32, i8*)*
Get_Var(__assert_fail)|type: pointer function
Type: pointer function
A Pointer 
Type: function
Type: other type

Get_Var(__assert_fail)|type: pointer function | <x*>,(|)
|Get_Var(__assert_fail)|attr'': (|)
Get_Var(__assert_fail)|var: __assert_fail
Dest:  %y = getelementptr inbounds %class.B, %class.B* %8, i32 0, i32 1

Get_Var(y)|vn: y
Get_Var(y)|lli:   %y = getelementptr inbounds %class.B, %class.B* %8, i32 0, i32 1
Get_Var(y)|type: i32*
Get_Var(y)|type: pointer integer
Type: pointer integer
A Pointer 
Type: integer
Get_Var(y)|type: pointer integer | <x*>,<4>
|Get_Var(y)|attr'': <4>
Get_Var(y)|var: y
Ptr_Element Case
Src: 10

Get_Var()|vn: 
Get_Var()|lli:   %8 = load %class.B*, %class.B** %b, align 8
Get_Var()|type: %class.B*
Get_Var()|type: pointer struct
Type: pointer struct
A Pointer 
Type: struct
Get_Var()|type: pointer struct | <x*>,<{class_B}>
|Get_Var()|attr'': <x*>,<{class_B}>
Get_Var()|var: 
arr:   %8 = load %class.B*, %class.B** %b, align 8 
tp Pointer & Struct
  store i32 10, i32* %y, align 4:  1
Dest:  %q = alloca i32, align 4

Get_Var(q)|vn: q
Get_Var(q)|lli:   %q = alloca i32, align 4
Get_Var(q)|type: i32*
Type: pointer integer
A Pointer 
Type: integer
Get_Var(q)|var: q

Get_Var(y2)|vn: y2
Get_Var(y2)|lli:   %y2 = getelementptr inbounds %class.B, %class.B* %9, i32 0, i32 1
Get_Var(y2)|type: i32*
Get_Var(y2)|type: pointer integer
Type: pointer integer
A Pointer 
Type: integer
Get_Var(y2)|type: pointer integer | <x*>,<4>
|Get_Var(y2)|attr'': <4>
Get_Var(y2)|var: y2

Get_Var(q)|vn: q
Get_Var(q)|lli:   %q = alloca i32, align 4
Get_Var(q)|type: i32*
Type: pointer integer
A Pointer 
Type: integer
Get_Var(q)|var: q
|(y2)

Get_Var(q)|vn: q
Get_Var(q)|lli:   %q = alloca i32, align 4
Get_Var(q)|type: i32*
Type: pointer integer
A Pointer 
Type: integer
Get_Var(q)|var: q

Get_Var(__assert_fail)|vn: __assert_fail
Get_Var(__assert_fail)|lli: ; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) #4

Get_Var(__assert_fail)|type: void (i8*, i8*, i32, i8*)*
Get_Var(__assert_fail)|type: pointer function
Type: pointer function
A Pointer 
Type: function
Type: other type

Get_Var(__assert_fail)|type: pointer function | <x*>,(|)
|Get_Var(__assert_fail)|attr'': (|)
Get_Var(__assert_fail)|var: __assert_fail
Type: integer
Type: integer

Get_Var(_Znwm)|vn: _Znwm
Get_Var(_Znwm)|lli: ; Function Attrs: nobuiltin allocsize(0)
declare nonnull i8* @_Znwm(i64) #1

Get_Var(_Znwm)|type: i8* (i64)*
Get_Var(_Znwm)|type: pointer function
Type: pointer function
A Pointer 
Type: function
Type: pointer integer
A Pointer 
Type: integer
Get_Var(_Znwm)|type: pointer function | <x*>,(<x*><1>|)
|Get_Var(_Znwm)|attr'': (<x*><1>|)
Get_Var(_Znwm)|var: _Znwm

Get_Var()|vn: 
Get_Var()|lli: i64 %0
Get_Var()|type: i64
Get_Var()|type: integer
Type: integer
Get_Var()|type: integer | <8>
|Get_Var()|attr'': <p>,<8>
Get_Var()|var: 
Type: integer
Type: integer
|()

Get_Var(llvm.memset.p0i8.i64)|vn: llvm.memset.p0i8.i64
Get_Var(llvm.memset.p0i8.i64)|lli: ; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

Get_Var(llvm.memset.p0i8.i64)|type: void (i8*, i8, i64, i1)*
Get_Var(llvm.memset.p0i8.i64)|type: pointer function
Type: pointer function
A Pointer 
Type: function
Type: other type

Get_Var(llvm.memset.p0i8.i64)|type: pointer function | <x*>,(|)
|Get_Var(llvm.memset.p0i8.i64)|attr'': (|)
Get_Var(llvm.memset.p0i8.i64)|var: llvm_memset_p0i8_i64

Get_Var()|vn: 
Get_Var()|lli: i8* %0
Get_Var()|type: i8*
Get_Var()|type: pointer integer
Type: pointer integer
A Pointer 
Type: integer
Get_Var()|type: pointer integer | <x*>,<1>
|Get_Var()|attr'': <p>,<x*>,<1>
Get_Var()|var: 

Get_Var()|vn: 
Get_Var()|lli: i8 %1
Get_Var()|type: i8
Get_Var()|type: integer
Type: integer
Get_Var()|type: integer | <1>
|Get_Var()|attr'': <p>,<1>
Get_Var()|var: 

Get_Var()|vn: 
Get_Var()|lli: i64 %2
Get_Var()|type: i64
Get_Var()|type: integer
Type: integer
Get_Var()|type: integer | <8>
|Get_Var()|attr'': <p>,<8>
Get_Var()|var: 

Get_Var()|vn: 
Get_Var()|lli: i1 %3
Get_Var()|type: i1
Get_Var()|type: integer
Type: integer
Get_Var()|type: integer | <0>
|Get_Var()|attr'': <p>,<0>
Get_Var()|var: 
Type: integer
Type: integer
|()
|()
|()
|()

Get_Var(_ZN1B3setEi)|vn: _ZN1B3setEi
Get_Var(_ZN1B3setEi)|lli: ; Function Attrs: mustprogress noinline nounwind optnone sspstrong uwtable
define linkonce_odr dso_local void @_ZN1B3setEi(%class.B* nonnull align 4 dereferenceable(8) %this, i32 %y) #3 comdat align 2 {
entry:
  %this.addr = alloca %class.B*, align 8
  %y.addr = alloca i32, align 4
  store %class.B* %this, %class.B** %this.addr, align 8
  store i32 %y, i32* %y.addr, align 4
  %this1 = load %class.B*, %class.B** %this.addr, align 8
  %0 = load i32, i32* %y.addr, align 4
  %x = getelementptr inbounds %class.B, %class.B* %this1, i32 0, i32 0
  store i32 %0, i32* %x, align 4
  ret void
}

Get_Var(_ZN1B3setEi)|type: void (%class.B*, i32)*
Get_Var(_ZN1B3setEi)|type: pointer function
Type: pointer function
A Pointer 
Type: function
Type: other type

Get_Var(_ZN1B3setEi)|type: pointer function | <x*>,(|)
|Get_Var(_ZN1B3setEi)|attr'': (|)
Get_Var(_ZN1B3setEi)|var: _ZN1B3setEi

Get_Var(this)|vn: this
Get_Var(this)|lli: %class.B* %this
Get_Var(this)|type: %class.B*
Get_Var(this)|type: pointer struct
Type: pointer struct
A Pointer 
Type: struct
Get_Var(this)|type: pointer struct | <x*>,<{class_B}>
|Get_Var(this)|attr'': <p>,<x*>,<{class_B}>
Get_Var(this)|var: this

Get_Var(y)|vn: y
Get_Var(y)|lli: i32 %y
Get_Var(y)|type: i32
Get_Var(y)|type: integer
Type: integer
Get_Var(y)|type: integer | <4>
|Get_Var(y)|attr'': <p>,<4>
Get_Var(y)|var: y

Get_Var(this.addr)|vn: this.addr
Get_Var(this.addr)|lli:   %this.addr = alloca %class.B*, align 8
Get_Var(this.addr)|type: %class.B**
Get_Var(this.addr)|type: pointer pointer struct
Type: pointer pointer struct
A Pointer 
Type: pointer struct
A Pointer 
Type: struct
Get_Var(this.addr)|type: pointer pointer struct | <x*>,<x*>,<{class_B}>
|Get_Var(this.addr)|attr'': <x*>,<{class_B}>
Get_Var(this.addr)|var: this_addr
|(this_addr)

Get_Var(y.addr)|vn: y.addr
Get_Var(y.addr)|lli:   %y.addr = alloca i32, align 4
Get_Var(y.addr)|type: i32*
Get_Var(y.addr)|type: pointer integer
Type: pointer integer
A Pointer 
Type: integer
Get_Var(y.addr)|type: pointer integer | <x*>,<4>
|Get_Var(y.addr)|attr'': <4>
Get_Var(y.addr)|var: y_addr
|(y_addr)
Dest:  %this.addr = alloca %class.B*, align 8

Get_Var(this.addr)|vn: this.addr
Get_Var(this.addr)|lli:   %this.addr = alloca %class.B*, align 8
Get_Var(this.addr)|type: %class.B**
Type: pointer pointer struct
A Pointer 
Type: pointer struct
A Pointer 
Type: struct
Get_Var(this.addr)|var: this_addr
Pointer Src

Get_Var(this)|vn: this
Get_Var(this)|lli: %class.B* %this
Get_Var(this)|type: %class.B*
Type: pointer struct
A Pointer 
Type: struct
Get_Var(this)|var: this

Get_Var(this.addr)|vn: this.addr
Get_Var(this.addr)|lli:   %this.addr = alloca %class.B*, align 8
Get_Var(this.addr)|type: %class.B**
Type: pointer pointer struct
A Pointer 
Type: pointer struct
A Pointer 
Type: struct
Get_Var(this.addr)|var: this_addr
Dest:  %y.addr = alloca i32, align 4

Get_Var(y.addr)|vn: y.addr
Get_Var(y.addr)|lli:   %y.addr = alloca i32, align 4
Get_Var(y.addr)|type: i32*
Type: pointer integer
A Pointer 
Type: integer
Get_Var(y.addr)|var: y_addr

Get_Var(y)|vn: y
Get_Var(y)|lli: i32 %y
Get_Var(y)|type: i32
Type: integer
Get_Var(y)|var: y

Get_Var(y.addr)|vn: y.addr
Get_Var(y.addr)|lli:   %y.addr = alloca i32, align 4
Get_Var(y.addr)|type: i32*
Type: pointer integer
A Pointer 
Type: integer
Get_Var(y.addr)|var: y_addr

Get_Var(this1)|vn: this1
Get_Var(this1)|lli:   %this1 = load %class.B*, %class.B** %this.addr, align 8
Get_Var(this1)|type: %class.B*
Get_Var(this1)|type: pointer struct
Type: pointer struct
A Pointer 
Type: struct
Get_Var(this1)|type: pointer struct | <x*>,<{class_B}>
|Get_Var(this1)|attr'': <x*>,<{class_B}>
Get_Var(this1)|var: this1

Get_Var(this.addr)|vn: this.addr
Get_Var(this.addr)|lli:   %this.addr = alloca %class.B*, align 8
Get_Var(this.addr)|type: %class.B**
Type: pointer pointer struct
A Pointer 
Type: pointer struct
A Pointer 
Type: struct
Get_Var(this.addr)|var: this_addr
|(this1)
Dest:  %x = getelementptr inbounds %class.B, %class.B* %this1, i32 0, i32 0

Get_Var(x)|vn: x
Get_Var(x)|lli:   %x = getelementptr inbounds %class.B, %class.B* %this1, i32 0, i32 0
Get_Var(x)|type: i32*
Get_Var(x)|type: pointer integer
Type: pointer integer
A Pointer 
Type: integer
Get_Var(x)|type: pointer integer | <x*>,<4>
|Get_Var(x)|attr'': <4>
Get_Var(x)|var: x
Ptr_Element Case

Get_Var(y.addr)|vn: y.addr
Get_Var(y.addr)|lli:   %y.addr = alloca i32, align 4
Get_Var(y.addr)|type: i32*
Type: pointer integer
A Pointer 
Type: integer
Get_Var(y.addr)|var: y_addr
Src: y_addr

Get_Var(this1)|vn: this1
Get_Var(this1)|lli:   %this1 = load %class.B*, %class.B** %this.addr, align 8
Get_Var(this1)|type: %class.B*
Type: pointer struct
A Pointer 
Type: struct
Get_Var(this1)|var: this1
arr:   %this1 = load %class.B*, %class.B** %this.addr, align 8 this1
tp Pointer & Struct
  store i32 %0, i32* %x, align 4: this1 0
Type: integer
Type: integer
|(this)
|(y)

Get_Var(_ZN1B3getEv)|vn: _ZN1B3getEv
Get_Var(_ZN1B3getEv)|lli: ; Function Attrs: mustprogress noinline nounwind optnone sspstrong uwtable
define linkonce_odr dso_local i32 @_ZN1B3getEv(%class.B* nonnull align 4 dereferenceable(8) %this) #3 comdat align 2 {
entry:
  %this.addr = alloca %class.B*, align 8
  store %class.B* %this, %class.B** %this.addr, align 8
  %this1 = load %class.B*, %class.B** %this.addr, align 8
  %x = getelementptr inbounds %class.B, %class.B* %this1, i32 0, i32 0
  %0 = load i32, i32* %x, align 4
  ret i32 %0
}

Get_Var(_ZN1B3getEv)|type: i32 (%class.B*)*
Get_Var(_ZN1B3getEv)|type: pointer function
Type: pointer function
A Pointer 
Type: function
Type: integer
Get_Var(_ZN1B3getEv)|type: pointer function | <x*>,(<4>|)
|Get_Var(_ZN1B3getEv)|attr'': (<4>|)
Get_Var(_ZN1B3getEv)|var: _ZN1B3getEv

Get_Var(this)|vn: this
Get_Var(this)|lli: %class.B* %this
Get_Var(this)|type: %class.B*
Get_Var(this)|type: pointer struct
Type: pointer struct
A Pointer 
Type: struct
Get_Var(this)|type: pointer struct | <x*>,<{class_B}>
|Get_Var(this)|attr'': <p>,<x*>,<{class_B}>
Get_Var(this)|var: this

Get_Var(this.addr)|vn: this.addr
Get_Var(this.addr)|lli:   %this.addr = alloca %class.B*, align 8
Get_Var(this.addr)|type: %class.B**
Get_Var(this.addr)|type: pointer pointer struct
Type: pointer pointer struct
A Pointer 
Type: pointer struct
A Pointer 
Type: struct
Get_Var(this.addr)|type: pointer pointer struct | <x*>,<x*>,<{class_B}>
|Get_Var(this.addr)|attr'': <x*>,<{class_B}>
Get_Var(this.addr)|var: this_addr
|(this_addr)
Dest:  %this.addr = alloca %class.B*, align 8

Get_Var(this.addr)|vn: this.addr
Get_Var(this.addr)|lli:   %this.addr = alloca %class.B*, align 8
Get_Var(this.addr)|type: %class.B**
Type: pointer pointer struct
A Pointer 
Type: pointer struct
A Pointer 
Type: struct
Get_Var(this.addr)|var: this_addr
Pointer Src

Get_Var(this)|vn: this
Get_Var(this)|lli: %class.B* %this
Get_Var(this)|type: %class.B*
Type: pointer struct
A Pointer 
Type: struct
Get_Var(this)|var: this

Get_Var(this.addr)|vn: this.addr
Get_Var(this.addr)|lli:   %this.addr = alloca %class.B*, align 8
Get_Var(this.addr)|type: %class.B**
Type: pointer pointer struct
A Pointer 
Type: pointer struct
A Pointer 
Type: struct
Get_Var(this.addr)|var: this_addr

Get_Var(this1)|vn: this1
Get_Var(this1)|lli:   %this1 = load %class.B*, %class.B** %this.addr, align 8
Get_Var(this1)|type: %class.B*
Get_Var(this1)|type: pointer struct
Type: pointer struct
A Pointer 
Type: struct
Get_Var(this1)|type: pointer struct | <x*>,<{class_B}>
|Get_Var(this1)|attr'': <x*>,<{class_B}>
Get_Var(this1)|var: this1

Get_Var(this.addr)|vn: this.addr
Get_Var(this.addr)|lli:   %this.addr = alloca %class.B*, align 8
Get_Var(this.addr)|type: %class.B**
Type: pointer pointer struct
A Pointer 
Type: pointer struct
A Pointer 
Type: struct
Get_Var(this.addr)|var: this_addr
|(this1)

Get_Var(x)|vn: x
Get_Var(x)|lli:   %x = getelementptr inbounds %class.B, %class.B* %this1, i32 0, i32 0
Get_Var(x)|type: i32*
Get_Var(x)|type: pointer integer
Type: pointer integer
A Pointer 
Type: integer
Get_Var(x)|type: pointer integer | <x*>,<4>
|Get_Var(x)|attr'': <4>
Get_Var(x)|var: x

Get_Var(this1)|vn: this1
Get_Var(this1)|lli:   %this1 = load %class.B*, %class.B** %this.addr, align 8
Get_Var(this1)|type: %class.B*
Type: pointer struct
A Pointer 
Type: struct
Get_Var(this1)|var: this1
arr:   %this1 = load %class.B*, %class.B** %this.addr, align 8 this1
tp Pointer & Struct
|(x)
Type: integer
Type: integer
|(this)

Get_Var(__assert_fail)|vn: __assert_fail
Get_Var(__assert_fail)|lli: ; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) #4

Get_Var(__assert_fail)|type: void (i8*, i8*, i32, i8*)*
Get_Var(__assert_fail)|type: pointer function
Type: pointer function
A Pointer 
Type: function
Type: other type

Get_Var(__assert_fail)|type: pointer function | <x*>,(|)
|Get_Var(__assert_fail)|attr'': (|)
Get_Var(__assert_fail)|var: __assert_fail

Get_Var()|vn: 
Get_Var()|lli: i8* %0
Get_Var()|type: i8*
Get_Var()|type: pointer integer
Type: pointer integer
A Pointer 
Type: integer
Get_Var()|type: pointer integer | <x*>,<1>
|Get_Var()|attr'': <p>,<x*>,<1>
Get_Var()|var: 

Get_Var()|vn: 
Get_Var()|lli: i8* %1
Get_Var()|type: i8*
Get_Var()|type: pointer integer
Type: pointer integer
A Pointer 
Type: integer
Get_Var()|type: pointer integer | <x*>,<1>
|Get_Var()|attr'': <p>,<x*>,<1>
Get_Var()|var: 

Get_Var()|vn: 
Get_Var()|lli: i32 %2
Get_Var()|type: i32
Get_Var()|type: integer
Type: integer
Get_Var()|type: integer | <4>
|Get_Var()|attr'': <p>,<4>
Get_Var()|var: 

Get_Var()|vn: 
Get_Var()|lli: i8* %3
Get_Var()|type: i8*
Get_Var()|type: pointer integer
Type: pointer integer
A Pointer 
Type: integer
Get_Var()|type: pointer integer | <x*>,<1>
|Get_Var()|attr'': <p>,<x*>,<1>
Get_Var()|var: 
Type: integer
Type: integer
|()
|()
|()
|()
Type: integer
Type: integer
int GLOBAL___str[5];
int GLOBAL___str_1[37];
int GLOBAL____PRETTY_FUNCTION___main[11];
int GLOBAL___str_2[6];

int main(  )
{
    int p;
    int q;
    class_B *b;
    p = 8;
    b = MALLOC( (SIZEOF (class_B)*1) );
    _ZN1B3setEi( b, p ); //0
    int call1;
    call1 = _ZN1B3getEv( b ); //0
    q = call1;
    if((q==p))
    {
    }
    else
    {
        {
            assert((0!=0));
        }
    }
    ->field_1 = 10;
    int y2;
    q = y2;
    if((10==q))
    {
    }
    else
    {
        {
            assert((0!=0));
        }
    }
    return 0;
}


int _Znwm( int  )
{
}


int llvm_memset_p0i8_i64( int * , int , int , int  )
{
}


int _ZN1B3setEi( int class_B * this, int y )
{
    int y_addr;
    y_addr = y;
    this->field_0 = y_addr;
    return 0;
}


int _ZN1B3getEv( int class_B * this )
{
    int x;
    x = this->field_0 ;
    return x;
}


int __assert_fail( int * , int * , int , int *  )
{
}

struct class_B{
    int field_0;
, int field_1;
}
Type: integer
Type: integer
Translation to SLAC C is finished
struct class_B{
    int field_0;
, int field_1;
}
Exception
